@using VTMUNC.ViewModels;
@model ApplicantsDashboard;

@{
    ViewData["Title"] = "Index";
}

<script src="https://cdn.jsdelivr.net/npm/chart.js"> </script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-adapter-date-fns/dist/chartjs-adapter-date-fns.bundle.min.js"></script>

<style>
    body {
        background: var(--secondary-background);
    }

</style>

<h2>Delegations</h2>

<section class="Analysis">
    <div class="row">
        <div class="col-3">
            <div class="card text-center">
                <h4>Total Participants</h4>
                <h2>@Model.TotalNumberOfParticipants</h2>
            </div>
            <div class="card text-center">
                <h4>Number of Days Since a Sign Up</h4>
                <h2>@Model.DaysSinceASignUp</h2>
            </div>
        </div>
        <div class="col-6 text-center">
            <div class="card">
                <canvas id="participantsChart">
                </canvas>
            </div>
            <h4>
                Total Number of Delegates
            </h4>
        </div>
        <div class="col-3">
            <div class="card text-center">
                <h4>Applicants' Invoice Status</h4>
                <canvas id="invoiceStatusChart"></canvas>
            </div>
        </div>
    </div>
</section>

<div class="table-responsive">
    <table class="table table-sm table-striped">
        <thead>
            <tr>
                <th>
                    Date
                </th>
                <th>
                    School
                </th>
                <th>
                    Advisor Email
                </th>
                <th>
                    Advisor Name
                </th>
                <th>
                    Delegation Size
                </th>
                <th>
                    School's Address
                </th>
                <th>
                    Action
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (Applicant item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Date)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.SchoolName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.AdvisorName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.AdvisorEmail)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DelegationSize)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.InvoiceStatus)
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

</div>

<script>
    // Participant Line Chart
    const participantChart = document.getElementById('participantsChart')
    new Chart(participantChart, {
        type: 'line',
        data: {
            datasets: [{
                label: 'Total Number of Participants',
                data: @Html.Raw(Model.getParticipantsChartData()),
                borderWidth: 1,
                borderColor: '#630031',
                pointBackgroundColor: '#630031', 
                pointBorderWidth: 2, 
                borderSize: 2,

            }]
        },
        options: {
            scales: {
                x: {
                    type: 'time',
                    time: {
                        unit: 'day',
                        displayFormats: {
                            day: 'yyyy-MM-dd'
                        },
                        distribution: 'linear',
                    },
                    title: {
                        display: true,
                        text: 'Signup Date'
                    },
                },
                y: {
                    beginAtZero: true,
                }
            }
        }
    });

    const invoiceStatusChart = document.getElementById("invoiceStatusChart");
  
    new Chart(invoiceStatusChart, {
        type: 'doughnut',
        data: {
            labels: ['Invoice Not Sent', 'Payment not Received', 'Payment Received'],
            datasets: [{
                data: @Html.Raw(Model.getInvoiceStatusData()),
                backgroundColor: ['#DC3545', '#FFC107', '#28A745'], // Colors for each segment
                borderWidth: 0, // Border width of the segments
            }],
        },
        options: {
            cutout: '60%', // Size of the hole in the center (60% creates a donut)
        },
    })
</script>